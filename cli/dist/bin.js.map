{"version":3,"file":"bin.js","sources":["../node_modules/commander/lib/error.js","../node_modules/commander/lib/argument.js","../node_modules/commander/lib/help.js","../node_modules/commander/lib/option.js","../node_modules/commander/lib/suggestSimilar.js","../node_modules/commander/lib/command.js","../node_modules/commander/index.js","../node_modules/commander/esm.mjs","../node_modules/sisteransi/src/index.js","../node_modules/picocolors/picocolors.browser.js","../node_modules/@clack/core/dist/index.mjs","../node_modules/@clack/prompts/dist/index.mjs","../src/commands/install/interactive.ts","../src/commands/install/index.ts","../src/index.ts"],"sourcesContent":["/**\n * CommanderError class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   *\n   * @returns {Argument}\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   *\n   * @returns {Argument}\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required ? '<' + nameOutput + '>' : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n","const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.minWidthToWrap = 40;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * prepareContext is called by Commander after applying overrides from `Command.configureHelp()`\n   * and just before calling `formatHelp()`.\n   *\n   * Commander just uses the helpWidth and the rest is provided for optional use by more complex subclasses.\n   *\n   * @param {{ error?: boolean, helpWidth?: number, outputHasColors?: boolean }} contextOptions\n   */\n  prepareContext(contextOptions) {\n    this.helpWidth = this.helpWidth ?? contextOptions.helpWidth ?? 80;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter((cmd) => !cmd._hidden);\n    const helpCommand = cmd._getHelpCommand();\n    if (helpCommand && !helpCommand._hidden) {\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: because overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns {number}\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short\n        ? option.short.replace(/^-/, '')\n        : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Built-in help option.\n    const helpOption = cmd._getHelpOption();\n    if (helpOption && !helpOption.hidden) {\n      // Automatically hide conflicting flags. Bit dubious but a historical behaviour that is convenient for single-command programs.\n      const removeShort = helpOption.short && cmd._findOption(helpOption.short);\n      const removeLong = helpOption.long && cmd._findOption(helpOption.long);\n      if (!removeShort && !removeLong) {\n        visibleOptions.push(helpOption); // no changes needed\n      } else if (helpOption.long && !removeLong) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.long, helpOption.description),\n        );\n      } else if (helpOption.short && !removeShort) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.short, helpOption.description),\n        );\n      }\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      const visibleOptions = ancestorCmd.options.filter(\n        (option) => !option.hidden,\n      );\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach((argument) => {\n        argument.description =\n          argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find((argument) => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments\n      .map((arg) => humanReadableArgName(arg))\n      .join(' ');\n    return (\n      cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '')\n    );\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(\n        max,\n        this.displayWidth(\n          helper.styleSubcommandTerm(helper.subcommandTerm(command)),\n        ),\n      );\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(\n        max,\n        this.displayWidth(helper.styleOptionTerm(helper.optionTerm(option))),\n      );\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(\n        max,\n        this.displayWidth(helper.styleOptionTerm(helper.optionTerm(option))),\n      );\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(\n        max,\n        this.displayWidth(\n          helper.styleArgumentTerm(helper.argumentTerm(argument)),\n        ),\n      );\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault =\n        option.required ||\n        option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(\n          `default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`,\n        );\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(\n        `default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`,\n      );\n    }\n    if (extraInfo.length > 0) {\n      const extraDescription = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescription}`;\n      }\n      return extraDescription;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth ?? 80; // in case prepareContext() was not called\n\n    function callFormatItem(term, description) {\n      return helper.formatItem(term, termWidth, description, helper);\n    }\n\n    // Usage\n    let output = [\n      `${helper.styleTitle('Usage:')} ${helper.styleUsage(helper.commandUsage(cmd))}`,\n      '',\n    ];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([\n        helper.boxWrap(\n          helper.styleCommandDescription(commandDescription),\n          helpWidth,\n        ),\n        '',\n      ]);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return callFormatItem(\n        helper.styleArgumentTerm(helper.argumentTerm(argument)),\n        helper.styleArgumentDescription(helper.argumentDescription(argument)),\n      );\n    });\n    if (argumentList.length > 0) {\n      output = output.concat([\n        helper.styleTitle('Arguments:'),\n        ...argumentList,\n        '',\n      ]);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return callFormatItem(\n        helper.styleOptionTerm(helper.optionTerm(option)),\n        helper.styleOptionDescription(helper.optionDescription(option)),\n      );\n    });\n    if (optionList.length > 0) {\n      output = output.concat([\n        helper.styleTitle('Options:'),\n        ...optionList,\n        '',\n      ]);\n    }\n\n    if (helper.showGlobalOptions) {\n      const globalOptionList = helper\n        .visibleGlobalOptions(cmd)\n        .map((option) => {\n          return callFormatItem(\n            helper.styleOptionTerm(helper.optionTerm(option)),\n            helper.styleOptionDescription(helper.optionDescription(option)),\n          );\n        });\n      if (globalOptionList.length > 0) {\n        output = output.concat([\n          helper.styleTitle('Global Options:'),\n          ...globalOptionList,\n          '',\n        ]);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return callFormatItem(\n        helper.styleSubcommandTerm(helper.subcommandTerm(cmd)),\n        helper.styleSubcommandDescription(helper.subcommandDescription(cmd)),\n      );\n    });\n    if (commandList.length > 0) {\n      output = output.concat([\n        helper.styleTitle('Commands:'),\n        ...commandList,\n        '',\n      ]);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Return display width of string, ignoring ANSI escape sequences. Used in padding and wrapping calculations.\n   *\n   * @param {string} str\n   * @returns {number}\n   */\n  displayWidth(str) {\n    return stripColor(str).length;\n  }\n\n  /**\n   * Style the title for displaying in the help. Called with 'Usage:', 'Options:', etc.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  styleTitle(str) {\n    return str;\n  }\n\n  styleUsage(str) {\n    // Usage has lots of parts the user might like to color separately! Assume default usage string which is formed like:\n    //    command subcommand [options] [command] <foo> [bar]\n    return str\n      .split(' ')\n      .map((word) => {\n        if (word === '[options]') return this.styleOptionText(word);\n        if (word === '[command]') return this.styleSubcommandText(word);\n        if (word[0] === '[' || word[0] === '<')\n          return this.styleArgumentText(word);\n        return this.styleCommandText(word); // Restrict to initial words?\n      })\n      .join(' ');\n  }\n  styleCommandDescription(str) {\n    return this.styleDescriptionText(str);\n  }\n  styleOptionDescription(str) {\n    return this.styleDescriptionText(str);\n  }\n  styleSubcommandDescription(str) {\n    return this.styleDescriptionText(str);\n  }\n  styleArgumentDescription(str) {\n    return this.styleDescriptionText(str);\n  }\n  styleDescriptionText(str) {\n    return str;\n  }\n  styleOptionTerm(str) {\n    return this.styleOptionText(str);\n  }\n  styleSubcommandTerm(str) {\n    // This is very like usage with lots of parts! Assume default string which is formed like:\n    //    subcommand [options] <foo> [bar]\n    return str\n      .split(' ')\n      .map((word) => {\n        if (word === '[options]') return this.styleOptionText(word);\n        if (word[0] === '[' || word[0] === '<')\n          return this.styleArgumentText(word);\n        return this.styleSubcommandText(word); // Restrict to initial words?\n      })\n      .join(' ');\n  }\n  styleArgumentTerm(str) {\n    return this.styleArgumentText(str);\n  }\n  styleOptionText(str) {\n    return str;\n  }\n  styleArgumentText(str) {\n    return str;\n  }\n  styleSubcommandText(str) {\n    return str;\n  }\n  styleCommandText(str) {\n    return str;\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper),\n    );\n  }\n\n  /**\n   * Detect manually wrapped and indented strings by checking for line break followed by whitespace.\n   *\n   * @param {string} str\n   * @returns {boolean}\n   */\n  preformatted(str) {\n    return /\\n[^\\S\\r\\n]/.test(str);\n  }\n\n  /**\n   * Format the \"item\", which consists of a term and description. Pad the term and wrap the description, indenting the following lines.\n   *\n   * So \"TTT\", 5, \"DDD DDDD DD DDD\" might be formatted for this.helpWidth=17 like so:\n   *   TTT  DDD DDDD\n   *        DD DDD\n   *\n   * @param {string} term\n   * @param {number} termWidth\n   * @param {string} description\n   * @param {Help} helper\n   * @returns {string}\n   */\n  formatItem(term, termWidth, description, helper) {\n    const itemIndent = 2;\n    const itemIndentStr = ' '.repeat(itemIndent);\n    if (!description) return itemIndentStr + term;\n\n    // Pad the term out to a consistent width, so descriptions are aligned.\n    const paddedTerm = term.padEnd(\n      termWidth + term.length - helper.displayWidth(term),\n    );\n\n    // Format the description.\n    const spacerWidth = 2; // between term and description\n    const helpWidth = this.helpWidth ?? 80; // in case prepareContext() was not called\n    const remainingWidth = helpWidth - termWidth - spacerWidth - itemIndent;\n    let formattedDescription;\n    if (\n      remainingWidth < this.minWidthToWrap ||\n      helper.preformatted(description)\n    ) {\n      formattedDescription = description;\n    } else {\n      const wrappedDescription = helper.boxWrap(description, remainingWidth);\n      formattedDescription = wrappedDescription.replace(\n        /\\n/g,\n        '\\n' + ' '.repeat(termWidth + spacerWidth),\n      );\n    }\n\n    // Construct and overall indent.\n    return (\n      itemIndentStr +\n      paddedTerm +\n      ' '.repeat(spacerWidth) +\n      formattedDescription.replace(/\\n/g, `\\n${itemIndentStr}`)\n    );\n  }\n\n  /**\n   * Wrap a string at whitespace, preserving existing line breaks.\n   * Wrapping is skipped if the width is less than `minWidthToWrap`.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @returns {string}\n   */\n  boxWrap(str, width) {\n    if (width < this.minWidthToWrap) return str;\n\n    const rawLines = str.split(/\\r\\n|\\n/);\n    // split up text by whitespace\n    const chunkPattern = /[\\s]*[^\\s]+/g;\n    const wrappedLines = [];\n    rawLines.forEach((line) => {\n      const chunks = line.match(chunkPattern);\n      if (chunks === null) {\n        wrappedLines.push('');\n        return;\n      }\n\n      let sumChunks = [chunks.shift()];\n      let sumWidth = this.displayWidth(sumChunks[0]);\n      chunks.forEach((chunk) => {\n        const visibleWidth = this.displayWidth(chunk);\n        // Accumulate chunks while they fit into width.\n        if (sumWidth + visibleWidth <= width) {\n          sumChunks.push(chunk);\n          sumWidth += visibleWidth;\n          return;\n        }\n        wrappedLines.push(sumChunks.join(''));\n\n        const nextChunk = chunk.trimStart(); // trim space at line break\n        sumChunks = [nextChunk];\n        sumWidth = this.displayWidth(nextChunk);\n      });\n      wrappedLines.push(sumChunks.join(''));\n    });\n\n    return wrappedLines.join('\\n');\n  }\n}\n\n/**\n * Strip style ANSI escape sequences from the string. In particular, SGR (Select Graphic Rendition) codes.\n *\n * @param {string} str\n * @returns {string}\n * @package\n */\n\nfunction stripColor(str) {\n  // eslint-disable-next-line no-control-regex\n  const sgrPattern = /\\x1b\\[\\d*(;\\d*)*m/g;\n  return str.replace(sgrPattern, '');\n}\n\nexports.Help = Help;\nexports.stripColor = stripColor;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag; // May be a short flag, undefined, or even a long flag (if option has two long flags).\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {(string | string[])} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as an object attribute key.\n   *\n   * @return {string}\n   */\n\n  attributeName() {\n    if (this.negate) {\n      return camelcase(this.name().replace(/^no-/, ''));\n    }\n    return camelcase(this.name());\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @package\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @package\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach((option) => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = preset !== undefined ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // short flag, single dash and single character\n  const shortFlagExp = /^-[^-]$/;\n  // long flag, double dash and at least one character\n  const longFlagExp = /^--[^-]/;\n\n  const flagParts = flags.split(/[ |,]+/).concat('guard');\n  // Normal is short and/or long.\n  if (shortFlagExp.test(flagParts[0])) shortFlag = flagParts.shift();\n  if (longFlagExp.test(flagParts[0])) longFlag = flagParts.shift();\n  // Long then short. Rarely used but fine.\n  if (!shortFlag && shortFlagExp.test(flagParts[0]))\n    shortFlag = flagParts.shift();\n  // Allow two long flags, like '--ws, --workspace'\n  // This is the supported way to have a shortish option flag.\n  if (!shortFlag && longFlagExp.test(flagParts[0])) {\n    shortFlag = longFlag;\n    longFlag = flagParts.shift();\n  }\n\n  // Check for unprocessed flag. Fail noisily rather than silently ignore.\n  if (flagParts[0].startsWith('-')) {\n    const unsupportedFlag = flagParts[0];\n    const baseError = `option creation failed due to '${unsupportedFlag}' in option flags '${flags}'`;\n    if (/^-[^-][^-]/.test(unsupportedFlag))\n      throw new Error(\n        `${baseError}\n- a short flag is a single dash and a single character\n  - either use a single dash and a single character (for a short flag)\n  - or use a double dash for a long option (and can have two, like '--ws, --workspace')`,\n      );\n    if (shortFlagExp.test(unsupportedFlag))\n      throw new Error(`${baseError}\n- too many short flags`);\n    if (longFlagExp.test(unsupportedFlag))\n      throw new Error(`${baseError}\n- too many long flags`);\n\n    throw new Error(`${baseError}\n- unrecognised flag format`);\n  }\n  if (shortFlag === undefined && longFlag === undefined)\n    throw new Error(\n      `option creation failed due to no flags found in '${flags}'.`,\n    );\n\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.DualOptions = DualOptions;\n","const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau–Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance)\n    return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost, // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map((candidate) => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map((candidate) => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n","const EventEmitter = require('node:events').EventEmitter;\nconst childProcess = require('node:child_process');\nconst path = require('node:path');\nconst fs = require('node:fs');\nconst process = require('node:process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help, stripColor } = require('./help.js');\nconst { Option, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = false;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {(boolean | string)} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n    this._savedState = null; // used in save/restoreStateBeforeParse\n\n    // see configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      outputError: (str, write) => write(str),\n      getOutHelpWidth: () =>\n        process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () =>\n        process.stderr.isTTY ? process.stderr.columns : undefined,\n      getOutHasColors: () =>\n        useColor() ?? (process.stdout.isTTY && process.stdout.hasColors?.()),\n      getErrHasColors: () =>\n        useColor() ?? (process.stderr.isTTY && process.stderr.hasColors?.()),\n      stripColor: (str) => stripColor(str),\n    };\n\n    this._hidden = false;\n    /** @type {(Option | null | undefined)} */\n    this._helpOption = undefined; // Lazy created on demand. May be null if help option is disabled.\n    this._addImplicitHelpCommand = undefined; // undecided whether true or false yet, not inherited\n    /** @type {Command} */\n    this._helpCommand = undefined; // lazy initialised, inherited\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._helpOption = sourceCommand._helpOption;\n    this._helpCommand = sourceCommand._helpCommand;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue =\n      sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {(object | string)} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // change how output being written, defaults to stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // change how output being written for errors, defaults to writeErr\n   *     outputError(str, write) // used for displaying errors and not used for displaying help\n   *     // specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // color support, currently only used with Help\n   *     getOutHasColors()\n   *     getErrHasColors()\n   *     stripColor() // used to remove ANSI escape codes if output does not have colors\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {(boolean|string)} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd._checkForBrokenPassThrough();\n\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {(Function|*)} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names\n      .trim()\n      .split(/ +/)\n      .forEach((detail) => {\n        this.argument(detail);\n      });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(\n        `only the last argument can be variadic '${previousArgument.name()}'`,\n      );\n    }\n    if (\n      argument.required &&\n      argument.defaultValue !== undefined &&\n      argument.parseArg === undefined\n    ) {\n      throw new Error(\n        `a default value for a required argument is never used: '${argument.name()}'`,\n      );\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Customise or override default help command. By default a help command is automatically added if your command has subcommands.\n   *\n   * @example\n   *    program.helpCommand('help [cmd]');\n   *    program.helpCommand('help [cmd]', 'show help');\n   *    program.helpCommand(false); // suppress default help command\n   *    program.helpCommand(true); // add help command even if no subcommands\n   *\n   * @param {string|boolean} enableOrNameAndArgs - enable with custom name and/or arguments, or boolean to override whether added\n   * @param {string} [description] - custom description\n   * @return {Command} `this` command for chaining\n   */\n\n  helpCommand(enableOrNameAndArgs, description) {\n    if (typeof enableOrNameAndArgs === 'boolean') {\n      this._addImplicitHelpCommand = enableOrNameAndArgs;\n      return this;\n    }\n\n    enableOrNameAndArgs = enableOrNameAndArgs ?? 'help [command]';\n    const [, helpName, helpArgs] = enableOrNameAndArgs.match(/([^ ]+) *(.*)/);\n    const helpDescription = description ?? 'display help for command';\n\n    const helpCommand = this.createCommand(helpName);\n    helpCommand.helpOption(false);\n    if (helpArgs) helpCommand.arguments(helpArgs);\n    if (helpDescription) helpCommand.description(helpDescription);\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n\n    return this;\n  }\n\n  /**\n   * Add prepared custom help command.\n   *\n   * @param {(Command|string|boolean)} helpCommand - custom help command, or deprecated enableOrNameAndArgs as for `.helpCommand()`\n   * @param {string} [deprecatedDescription] - deprecated custom description used with custom name only\n   * @return {Command} `this` command for chaining\n   */\n  addHelpCommand(helpCommand, deprecatedDescription) {\n    // If not passed an object, call through to helpCommand for backwards compatibility,\n    // as addHelpCommand was originally used like helpCommand is now.\n    if (typeof helpCommand !== 'object') {\n      this.helpCommand(helpCommand, deprecatedDescription);\n      return this;\n    }\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n    return this;\n  }\n\n  /**\n   * Lazy create help command.\n   *\n   * @return {(Command|null)}\n   * @package\n   */\n  _getHelpCommand() {\n    const hasImplicitHelpCommand =\n      this._addImplicitHelpCommand ??\n      (this.commands.length &&\n        !this._actionHandler &&\n        !this._findCommand('help'));\n\n    if (hasImplicitHelpCommand) {\n      if (this._helpCommand === undefined) {\n        this.helpCommand(undefined, undefined); // use default name and description\n      }\n      return this._helpCommand;\n    }\n    return null;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {(Option | Argument)} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Check for option flag conflicts.\n   * Register option if no conflicts found, or throw on conflict.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  _registerOption(option) {\n    const matchingOption =\n      (option.short && this._findOption(option.short)) ||\n      (option.long && this._findOption(option.long));\n    if (matchingOption) {\n      const matchingFlag =\n        option.long && this._findOption(option.long)\n          ? option.long\n          : option.short;\n      throw new Error(`Cannot add option '${option.flags}'${this._name && ` to command '${this._name}'`} due to conflicting flag '${matchingFlag}'\n-  already used by option '${matchingOption.flags}'`);\n    }\n\n    this.options.push(option);\n  }\n\n  /**\n   * Check for command name and alias conflicts with existing commands.\n   * Register command if no conflicts found, or throw on conflict.\n   *\n   * @param {Command} command\n   * @private\n   */\n\n  _registerCommand(command) {\n    const knownBy = (cmd) => {\n      return [cmd.name()].concat(cmd.aliases());\n    };\n\n    const alreadyUsed = knownBy(command).find((name) =>\n      this._findCommand(name),\n    );\n    if (alreadyUsed) {\n      const existingCmd = knownBy(this._findCommand(alreadyUsed)).join('|');\n      const newCmd = knownBy(command).join('|');\n      throw new Error(\n        `cannot add command '${newCmd}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    this.commands.push(command);\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    this._registerOption(option);\n\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(\n          name,\n          option.defaultValue === undefined ? true : option.defaultValue,\n          'default',\n        );\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @return {Command} `this` command for chaining\n   * @private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error(\n        'To add an Option object use addOption() instead of option() or requiredOption()',\n      );\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('--pt, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Add a required option which must have a value after parsing. This usually means\n   * the option must be specified on the command line. (Otherwise the same as .option().)\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx(\n      { mandatory: true },\n      flags,\n      description,\n      parseArg,\n      defaultValue,\n    );\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {boolean} [combine] - if `true` or omitted, an optional value can be specified directly after the flag.\n   * @return {Command} `this` command for chaining\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {boolean} [allowUnknown] - if `true` or omitted, no error will be thrown for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {boolean} [allowExcess] - if `true` or omitted, no error will be thrown for excess arguments.\n   * @return {Command} `this` command for chaining\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {boolean} [positional]\n   * @return {Command} `this` command for chaining\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {boolean} [passThrough] for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    this._checkForBrokenPassThrough();\n    return this;\n  }\n\n  /**\n   * @private\n   */\n\n  _checkForBrokenPassThrough() {\n    if (\n      this.parent &&\n      this._passThroughOptions &&\n      !this.parent._enablePositionalOptions\n    ) {\n      throw new Error(\n        `passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`,\n      );\n    }\n  }\n\n  /**\n   * Whether to store option values as properties on command object,\n   * or store separately (specify false). In both cases the option values can be accessed using .opts().\n   *\n   * @param {boolean} [storeAsProperties=true]\n   * @return {Command} `this` command for chaining\n   */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    if (Object.keys(this._optionValues).length) {\n      throw new Error(\n        'call .storeOptionsAsProperties() before setting option values',\n      );\n    }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n   * Store option value and where the value came from.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @param {string} source - expected values are default/config/env/cli/implied\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n   * Get source of option value.\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n   * Get source of option value. See also .optsWithGlobals().\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // auto-detect argument conventions if nothing supplied\n    if (argv === undefined && parseOptions.from === undefined) {\n      if (process.versions?.electron) {\n        parseOptions.from = 'electron';\n      }\n      // check node specific options for scenarios where user CLI args follow executable without scriptname\n      const execArgv = process.execArgv ?? [];\n      if (\n        execArgv.includes('-e') ||\n        execArgv.includes('--eval') ||\n        execArgv.includes('-p') ||\n        execArgv.includes('--print')\n      ) {\n        parseOptions.from = 'eval'; // internal usage, not documented\n      }\n    }\n\n    // default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n    }\n    this.rawArgs = argv.slice();\n\n    // extract the user args and scriptPath\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: because defaultApp is an unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      case 'eval':\n        userArgs = argv.slice(1);\n        break;\n      default:\n        throw new Error(\n          `unexpected parse option { from: '${parseOptions.from}' }`,\n        );\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath)\n      this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * program.parse(); // parse process.argv and auto-detect electron and special node flags\n   * program.parse(process.argv); // assume argv[0] is app and argv[1] is script\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    this._prepareForParse();\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * await program.parseAsync(); // parse process.argv and auto-detect electron and special node flags\n   * await program.parseAsync(process.argv); // assume argv[0] is app and argv[1] is script\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    this._prepareForParse();\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  _prepareForParse() {\n    if (this._savedState === null) {\n      this.saveStateBeforeParse();\n    } else {\n      this.restoreStateBeforeParse();\n    }\n  }\n\n  /**\n   * Called the first time parse is called to save state and allow a restore before subsequent calls to parse.\n   * Not usually called directly, but available for subclasses to save their custom state.\n   *\n   * This is called in a lazy way. Only commands used in parsing chain will have state saved.\n   */\n  saveStateBeforeParse() {\n    this._savedState = {\n      // name is stable if supplied by author, but may be unspecified for root command and deduced during parsing\n      _name: this._name,\n      // option values before parse have default values (including false for negated options)\n      // shallow clones\n      _optionValues: { ...this._optionValues },\n      _optionValueSources: { ...this._optionValueSources },\n    };\n  }\n\n  /**\n   * Restore state before parse for calls after the first.\n   * Not usually called directly, but available for subclasses to save their custom state.\n   *\n   * This is called in a lazy way. Only commands used in parsing chain will have state restored.\n   */\n  restoreStateBeforeParse() {\n    if (this._storeOptionsAsProperties)\n      throw new Error(`Can not call parse again when storeOptionsAsProperties is true.\n- either make a new Command for each call to parse, or stop storing options as properties`);\n\n    // clear state from _prepareUserArgs\n    this._name = this._savedState._name;\n    this._scriptPath = null;\n    this.rawArgs = [];\n    // clear state from setOptionValueWithSource\n    this._optionValues = { ...this._savedState._optionValues };\n    this._optionValueSources = { ...this._savedState._optionValueSources };\n    // clear state from _parseCommand\n    this.args = [];\n    // clear state from _processArguments\n    this.processedArgs = [];\n  }\n\n  /**\n   * Throw if expected executable is missing. Add lots of help for author.\n   *\n   * @param {string} executableFile\n   * @param {string} executableDir\n   * @param {string} subcommandName\n   */\n  _checkForMissingExecutable(executableFile, executableDir, subcommandName) {\n    if (fs.existsSync(executableFile)) return;\n\n    const executableDirMessage = executableDir\n      ? `searched for local subcommand relative to directory '${executableDir}'`\n      : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n    const executableMissing = `'${executableFile}' does not exist\n - if '${subcommandName}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n    throw new Error(executableMissing);\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find((ext) =>\n        fs.existsSync(`${localBin}${ext}`),\n      );\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile =\n      subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(\n        path.dirname(resolvedScriptPath),\n        executableDir,\n      );\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(\n          this._scriptPath,\n          path.extname(this._scriptPath),\n        );\n        if (legacyName !== this._name) {\n          localFile = findFile(\n            executableDir,\n            `${legacyName}-${subcommand._name}`,\n          );\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      this._checkForMissingExecutable(\n        executableFile,\n        executableDir,\n        subcommand._name,\n      );\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) {\n      // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            // @ts-ignore because signals not typed to known strings\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    const exitCallback = this._exitCallback;\n    proc.on('close', (code) => {\n      code = code ?? 1; // code is null if spawned process terminated due to a signal\n      if (!exitCallback) {\n        process.exit(code);\n      } else {\n        exitCallback(\n          new CommanderError(\n            code,\n            'commander.executeSubCommandAsync',\n            '(close)',\n          ),\n        );\n      }\n    });\n    proc.on('error', (err) => {\n      // @ts-ignore: because err.code is an unknown property\n      if (err.code === 'ENOENT') {\n        this._checkForMissingExecutable(\n          executableFile,\n          executableDir,\n          subcommand._name,\n        );\n        // @ts-ignore: because err.code is an unknown property\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(\n          1,\n          'commander.executeSubCommandAsync',\n          '(error)',\n        );\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    subCommand._prepareForParse();\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(\n      promiseChain,\n      subCommand,\n      'preSubcommand',\n    );\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(\n      subcommandName,\n      [],\n      [this._getHelpOption()?.long ?? this._getHelpOption()?.short ?? '--help'],\n    );\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (\n      this.registeredArguments.length > 0 &&\n      this.registeredArguments[this.registeredArguments.length - 1].variadic\n    ) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(\n          argument,\n          value,\n          previous,\n          invalidValueMessage,\n        );\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Function} fn\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter((cmd) => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach((hookedCommand) => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (\n      this._getHelpCommand() &&\n      operands[0] === this._getHelpCommand().name()\n    ) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      this._outputHelpIfRequested(unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(\n        this._defaultCommandName,\n        operands,\n        unknown,\n      );\n    }\n    if (\n      this.commands.length &&\n      this.args.length === 0 &&\n      !this._actionHandler &&\n      !this._defaultCommandName\n    ) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    this._outputHelpIfRequested(parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () =>\n        this._actionHandler(this.processedArgs),\n      );\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) {\n        // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @private\n   * @return {Command | undefined}\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(\n      (cmd) => cmd._name === name || cmd._aliases.includes(name),\n    );\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @package\n   */\n\n  _findOption(arg) {\n    return this.options.find((option) => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (\n          anOption.mandatory &&\n          cmd.getOptionValue(anOption.attributeName()) === undefined\n        ) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter((option) => {\n      const optionKey = option.attributeName();\n      if (this.getOptionValue(optionKey) === undefined) {\n        return false;\n      }\n      return this.getOptionValueSource(optionKey) !== 'default';\n    });\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0,\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName()),\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Side effects: modifies command by storing options. Does not reset state if called again.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {string[]} argv\n   * @return {{operands: string[], unknown: string[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else {\n            // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (\n            option.required ||\n            (option.optional && this._combineFlagAndOptionalValue)\n          ) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if (\n        (this._enablePositionalOptions || this._passThroughOptions) &&\n        operands.length === 0 &&\n        unknown.length === 0\n      ) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (\n          this._getHelpCommand() &&\n          arg === this._getHelpCommand().name()\n        ) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] =\n          key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {},\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(\n      `${message}\\n`,\n      this._outputConfiguration.writeErr,\n    );\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (\n          this.getOptionValue(optionKey) === undefined ||\n          ['default', 'config', 'env'].includes(\n            this.getOptionValueSource(optionKey),\n          )\n        ) {\n          if (option.required || option.optional) {\n            // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else {\n            // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return (\n        this.getOptionValue(optionKey) !== undefined &&\n        !['default', 'implied'].includes(this.getOptionValueSource(optionKey))\n      );\n    };\n    this.options\n      .filter(\n        (option) =>\n          option.implied !== undefined &&\n          hasCustomOptionValue(option.attributeName()) &&\n          dualHelper.valueFromOption(\n            this.getOptionValue(option.attributeName()),\n            option,\n          ),\n      )\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter((impliedKey) => !hasCustomOptionValue(impliedKey))\n          .forEach((impliedKey) => {\n            this.setOptionValueWithSource(\n              impliedKey,\n              option.implied[impliedKey],\n              'implied',\n            );\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(\n        (target) => target.negate && optionKey === target.attributeName(),\n      );\n      const positiveOption = this.options.find(\n        (target) => !target.negate && optionKey === target.attributeName(),\n      );\n      if (\n        negativeOption &&\n        ((negativeOption.presetArg === undefined && optionValue === false) ||\n          (negativeOption.presetArg !== undefined &&\n            optionValue === negativeOption.presetArg))\n      ) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let command = this;\n      do {\n        const moreFlags = command\n          .createHelp()\n          .visibleOptions(command)\n          .filter((option) => option.long)\n          .map((option) => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = expected === 1 ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp()\n        .visibleCommands(this)\n        .forEach((command) => {\n          candidateNames.push(command.name());\n          // just visible alias\n          if (command.alias()) candidateNames.push(command.alias());\n        });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {(this | string | undefined)} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName();\n    this._registerOption(versionOption);\n\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {object} [argsDescription]\n   * @return {(string|Command)}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined)\n      return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {(string|Command)}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let command = this;\n    if (\n      this.commands.length !== 0 &&\n      this.commands[this.commands.length - 1]._executableHandler\n    ) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name)\n      throw new Error(\"Command alias can't be the same as its name\");\n    const matchingCommand = this.parent?._findCommand(alias);\n    if (matchingCommand) {\n      // c.f. _registerCommand\n      const existingCmd = [matchingCommand.name()]\n        .concat(matchingCommand.aliases())\n        .join('|');\n      throw new Error(\n        `cannot add alias '${alias}' to command '${this.name()}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {(string[]|Command)}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return []\n        .concat(\n          this.options.length || this._helpOption !== null ? '[options]' : [],\n          this.commands.length ? '[command]' : [],\n          this.registeredArguments.length ? args : [],\n        )\n        .join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {(string|null|Command)}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    const context = this._getOutputContext(contextOptions);\n    helper.prepareContext({\n      error: context.error,\n      helpWidth: context.helpWidth,\n      outputHasColors: context.hasColors,\n    });\n    const text = helper.formatHelp(this, helper);\n    if (context.hasColors) return text;\n    return this._outputConfiguration.stripColor(text);\n  }\n\n  /**\n   * @typedef HelpContext\n   * @type {object}\n   * @property {boolean} error\n   * @property {number} helpWidth\n   * @property {boolean} hasColors\n   * @property {function} write - includes stripColor if needed\n   *\n   * @returns {HelpContext}\n   * @private\n   */\n\n  _getOutputContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const error = !!contextOptions.error;\n    let baseWrite;\n    let hasColors;\n    let helpWidth;\n    if (error) {\n      baseWrite = (str) => this._outputConfiguration.writeErr(str);\n      hasColors = this._outputConfiguration.getErrHasColors();\n      helpWidth = this._outputConfiguration.getErrHelpWidth();\n    } else {\n      baseWrite = (str) => this._outputConfiguration.writeOut(str);\n      hasColors = this._outputConfiguration.getOutHasColors();\n      helpWidth = this._outputConfiguration.getOutHelpWidth();\n    }\n    const write = (str) => {\n      if (!hasColors) str = this._outputConfiguration.stripColor(str);\n      return baseWrite(str);\n    };\n    return { error, write, hasColors, helpWidth };\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n\n    const outputContext = this._getOutputContext(contextOptions);\n    /** @type {HelpTextEventContext} */\n    const eventContext = {\n      error: outputContext.error,\n      write: outputContext.write,\n      command: this,\n    };\n\n    this._getCommandAndAncestors()\n      .reverse()\n      .forEach((command) => command.emit('beforeAllHelp', eventContext));\n    this.emit('beforeHelp', eventContext);\n\n    let helpInformation = this.helpInformation({ error: outputContext.error });\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (\n        typeof helpInformation !== 'string' &&\n        !Buffer.isBuffer(helpInformation)\n      ) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    outputContext.write(helpInformation);\n\n    if (this._getHelpOption()?.long) {\n      this.emit(this._getHelpOption().long); // deprecated\n    }\n    this.emit('afterHelp', eventContext);\n    this._getCommandAndAncestors().forEach((command) =>\n      command.emit('afterAllHelp', eventContext),\n    );\n  }\n\n  /**\n   * You can pass in flags and a description to customise the built-in help option.\n   * Pass in false to disable the built-in help option.\n   *\n   * @example\n   * program.helpOption('-?, --help' 'show help'); // customise\n   * program.helpOption(false); // disable\n   *\n   * @param {(string | boolean)} flags\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    // Support disabling built-in help option.\n    if (typeof flags === 'boolean') {\n      // true is not an expected value. Do something sensible but no unit-test.\n      // istanbul ignore if\n      if (flags) {\n        this._helpOption = this._helpOption ?? undefined; // preserve existing option\n      } else {\n        this._helpOption = null; // disable\n      }\n      return this;\n    }\n\n    // Customise flags and description.\n    flags = flags ?? '-h, --help';\n    description = description ?? 'display help for command';\n    this._helpOption = this.createOption(flags, description);\n\n    return this;\n  }\n\n  /**\n   * Lazy create help option.\n   * Returns null if has been disabled with .helpOption(false).\n   *\n   * @returns {(Option | null)} the help option\n   * @package\n   */\n  _getHelpOption() {\n    // Lazy create help option on demand.\n    if (this._helpOption === undefined) {\n      this.helpOption(undefined, undefined);\n    }\n    return this._helpOption;\n  }\n\n  /**\n   * Supply your own option to use for the built-in help option.\n   * This is an alternative to using helpOption() to customise the flags and description etc.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addHelpOption(option) {\n    this._helpOption = option;\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = Number(process.exitCode ?? 0); // process.exitCode does allow a string or an integer, but we prefer just a number\n    if (\n      exitCode === 0 &&\n      contextOptions &&\n      typeof contextOptions !== 'function' &&\n      contextOptions.error\n    ) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * // Do a little typing to coordinate emit and listener for the help text events.\n   * @typedef HelpTextEventContext\n   * @type {object}\n   * @property {boolean} error\n   * @property {Command} command\n   * @property {function} write\n   */\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {(string | Function)} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (/** @type {HelpTextEventContext} */ context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Output help information if help flags specified\n   *\n   * @param {Array} args - array of options to search for help flags\n   * @private\n   */\n\n  _outputHelpIfRequested(args) {\n    const helpOption = this._getHelpOption();\n    const helpRequested = helpOption && args.find((arg) => helpOption.is(arg));\n    if (helpRequested) {\n      this.outputHelp();\n      // (Do not have all displayed text available so only passing placeholder.)\n      this._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n    }\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null\n    ) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null\n    ) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\n/**\n * @returns {boolean | undefined}\n * @package\n */\nfunction useColor() {\n  // Test for common conventions.\n  // NB: the observed behaviour is in combination with how author adds color! For example:\n  //   - we do not test NODE_DISABLE_COLORS, but util:styletext does\n  //   - we do test NO_COLOR, but Chalk does not\n  //\n  // References:\n  // https://no-color.org\n  // https://bixense.com/clicolors/\n  // https://github.com/nodejs/node/blob/0a00217a5f67ef4a22384cfc80eb6dd9a917fdc1/lib/internal/tty.js#L109\n  // https://github.com/chalk/supports-color/blob/c214314a14bcb174b12b3014b2b0a8de375029ae/index.js#L33\n  // (https://force-color.org recent web page from 2023, does not match major javascript implementations)\n\n  if (\n    process.env.NO_COLOR ||\n    process.env.FORCE_COLOR === '0' ||\n    process.env.FORCE_COLOR === 'false'\n  )\n    return false;\n  if (process.env.FORCE_COLOR || process.env.CLICOLOR_FORCE !== undefined)\n    return true;\n  return undefined;\n}\n\nexports.Command = Command;\nexports.useColor = useColor; // exporting for tests\n","const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\nexports.program = new Command();\n\nexports.createCommand = (name) => new Command(name);\nexports.createOption = (flags, description) => new Option(flags, description);\nexports.createArgument = (name, description) => new Argument(name, description);\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n","import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help,\n} = commander;\n","'use strict';\n\nconst ESC = '\\x1B';\nconst CSI = `${ESC}[`;\nconst beep = '\\u0007';\n\nconst cursor = {\n  to(x, y) {\n    if (!y) return `${CSI}${x + 1}G`;\n    return `${CSI}${y + 1};${x + 1}H`;\n  },\n  move(x, y) {\n    let ret = '';\n\n    if (x < 0) ret += `${CSI}${-x}D`;\n    else if (x > 0) ret += `${CSI}${x}C`;\n\n    if (y < 0) ret += `${CSI}${-y}A`;\n    else if (y > 0) ret += `${CSI}${y}B`;\n\n    return ret;\n  },\n  up: (count = 1) => `${CSI}${count}A`,\n  down: (count = 1) => `${CSI}${count}B`,\n  forward: (count = 1) => `${CSI}${count}C`,\n  backward: (count = 1) => `${CSI}${count}D`,\n  nextLine: (count = 1) => `${CSI}E`.repeat(count),\n  prevLine: (count = 1) => `${CSI}F`.repeat(count),\n  left: `${CSI}G`,\n  hide: `${CSI}?25l`,\n  show: `${CSI}?25h`,\n  save: `${ESC}7`,\n  restore: `${ESC}8`\n}\n\nconst scroll = {\n  up: (count = 1) => `${CSI}S`.repeat(count),\n  down: (count = 1) => `${CSI}T`.repeat(count)\n}\n\nconst erase = {\n  screen: `${CSI}2J`,\n  up: (count = 1) => `${CSI}1J`.repeat(count),\n  down: (count = 1) => `${CSI}J`.repeat(count),\n  line: `${CSI}2K`,\n  lineEnd: `${CSI}K`,\n  lineStart: `${CSI}1K`,\n  lines(count) {\n    let clear = '';\n    for (let i = 0; i < count; i++)\n      clear += this.line + (i < count - 1 ? cursor.up() : '');\n    if (count)\n      clear += cursor.left;\n    return clear;\n  }\n}\n\nmodule.exports = { cursor, scroll, erase, beep };\n","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","import{cursor as l,erase as b}from\"sisteransi\";import{stdin as $,stdout as j}from\"node:process\";import*as f from\"node:readline\";import M from\"node:readline\";import{WriteStream as U}from\"node:tty\";import g from\"picocolors\";function J({onlyFirst:t=!1}={}){const F=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?(?:\\\\u0007|\\\\u001B\\\\u005C|\\\\u009C))\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\"].join(\"|\");return new RegExp(F,t?void 0:\"g\")}const Q=J();function T(t){if(typeof t!=\"string\")throw new TypeError(`Expected a \\`string\\`, got \\`${typeof t}\\``);return t.replace(Q,\"\")}function O(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}var P={exports:{}};(function(t){var u={};t.exports=u,u.eastAsianWidth=function(e){var s=e.charCodeAt(0),i=e.length==2?e.charCodeAt(1):0,D=s;return 55296<=s&&s<=56319&&56320<=i&&i<=57343&&(s&=1023,i&=1023,D=s<<10|i,D+=65536),D==12288||65281<=D&&D<=65376||65504<=D&&D<=65510?\"F\":D==8361||65377<=D&&D<=65470||65474<=D&&D<=65479||65482<=D&&D<=65487||65490<=D&&D<=65495||65498<=D&&D<=65500||65512<=D&&D<=65518?\"H\":4352<=D&&D<=4447||4515<=D&&D<=4519||4602<=D&&D<=4607||9001<=D&&D<=9002||11904<=D&&D<=11929||11931<=D&&D<=12019||12032<=D&&D<=12245||12272<=D&&D<=12283||12289<=D&&D<=12350||12353<=D&&D<=12438||12441<=D&&D<=12543||12549<=D&&D<=12589||12593<=D&&D<=12686||12688<=D&&D<=12730||12736<=D&&D<=12771||12784<=D&&D<=12830||12832<=D&&D<=12871||12880<=D&&D<=13054||13056<=D&&D<=19903||19968<=D&&D<=42124||42128<=D&&D<=42182||43360<=D&&D<=43388||44032<=D&&D<=55203||55216<=D&&D<=55238||55243<=D&&D<=55291||63744<=D&&D<=64255||65040<=D&&D<=65049||65072<=D&&D<=65106||65108<=D&&D<=65126||65128<=D&&D<=65131||110592<=D&&D<=110593||127488<=D&&D<=127490||127504<=D&&D<=127546||127552<=D&&D<=127560||127568<=D&&D<=127569||131072<=D&&D<=194367||177984<=D&&D<=196605||196608<=D&&D<=262141?\"W\":32<=D&&D<=126||162<=D&&D<=163||165<=D&&D<=166||D==172||D==175||10214<=D&&D<=10221||10629<=D&&D<=10630?\"Na\":D==161||D==164||167<=D&&D<=168||D==170||173<=D&&D<=174||176<=D&&D<=180||182<=D&&D<=186||188<=D&&D<=191||D==198||D==208||215<=D&&D<=216||222<=D&&D<=225||D==230||232<=D&&D<=234||236<=D&&D<=237||D==240||242<=D&&D<=243||247<=D&&D<=250||D==252||D==254||D==257||D==273||D==275||D==283||294<=D&&D<=295||D==299||305<=D&&D<=307||D==312||319<=D&&D<=322||D==324||328<=D&&D<=331||D==333||338<=D&&D<=339||358<=D&&D<=359||D==363||D==462||D==464||D==466||D==468||D==470||D==472||D==474||D==476||D==593||D==609||D==708||D==711||713<=D&&D<=715||D==717||D==720||728<=D&&D<=731||D==733||D==735||768<=D&&D<=879||913<=D&&D<=929||931<=D&&D<=937||945<=D&&D<=961||963<=D&&D<=969||D==1025||1040<=D&&D<=1103||D==1105||D==8208||8211<=D&&D<=8214||8216<=D&&D<=8217||8220<=D&&D<=8221||8224<=D&&D<=8226||8228<=D&&D<=8231||D==8240||8242<=D&&D<=8243||D==8245||D==8251||D==8254||D==8308||D==8319||8321<=D&&D<=8324||D==8364||D==8451||D==8453||D==8457||D==8467||D==8470||8481<=D&&D<=8482||D==8486||D==8491||8531<=D&&D<=8532||8539<=D&&D<=8542||8544<=D&&D<=8555||8560<=D&&D<=8569||D==8585||8592<=D&&D<=8601||8632<=D&&D<=8633||D==8658||D==8660||D==8679||D==8704||8706<=D&&D<=8707||8711<=D&&D<=8712||D==8715||D==8719||D==8721||D==8725||D==8730||8733<=D&&D<=8736||D==8739||D==8741||8743<=D&&D<=8748||D==8750||8756<=D&&D<=8759||8764<=D&&D<=8765||D==8776||D==8780||D==8786||8800<=D&&D<=8801||8804<=D&&D<=8807||8810<=D&&D<=8811||8814<=D&&D<=8815||8834<=D&&D<=8835||8838<=D&&D<=8839||D==8853||D==8857||D==8869||D==8895||D==8978||9312<=D&&D<=9449||9451<=D&&D<=9547||9552<=D&&D<=9587||9600<=D&&D<=9615||9618<=D&&D<=9621||9632<=D&&D<=9633||9635<=D&&D<=9641||9650<=D&&D<=9651||9654<=D&&D<=9655||9660<=D&&D<=9661||9664<=D&&D<=9665||9670<=D&&D<=9672||D==9675||9678<=D&&D<=9681||9698<=D&&D<=9701||D==9711||9733<=D&&D<=9734||D==9737||9742<=D&&D<=9743||9748<=D&&D<=9749||D==9756||D==9758||D==9792||D==9794||9824<=D&&D<=9825||9827<=D&&D<=9829||9831<=D&&D<=9834||9836<=D&&D<=9837||D==9839||9886<=D&&D<=9887||9918<=D&&D<=9919||9924<=D&&D<=9933||9935<=D&&D<=9953||D==9955||9960<=D&&D<=9983||D==10045||D==10071||10102<=D&&D<=10111||11093<=D&&D<=11097||12872<=D&&D<=12879||57344<=D&&D<=63743||65024<=D&&D<=65039||D==65533||127232<=D&&D<=127242||127248<=D&&D<=127277||127280<=D&&D<=127337||127344<=D&&D<=127386||917760<=D&&D<=917999||983040<=D&&D<=1048573||1048576<=D&&D<=1114109?\"A\":\"N\"},u.characterLength=function(e){var s=this.eastAsianWidth(e);return s==\"F\"||s==\"W\"||s==\"A\"?2:1};function F(e){return e.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g)||[]}u.length=function(e){for(var s=F(e),i=0,D=0;D<s.length;D++)i=i+this.characterLength(s[D]);return i},u.slice=function(e,s,i){textLen=u.length(e),s=s||0,i=i||1,s<0&&(s=textLen+s),i<0&&(i=textLen+i);for(var D=\"\",C=0,o=F(e),E=0;E<o.length;E++){var a=o[E],n=u.length(a);if(C>=s-(n==2?1:0))if(C+n<=i)D+=a;else break;C+=n}return D}})(P);var X=P.exports;const DD=O(X);var uD=function(){return/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC)?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\uD83D\\uDC41\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\u2764\\uFE0F|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD1D\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g};const FD=O(uD);function A(t,u={}){if(typeof t!=\"string\"||t.length===0||(u={ambiguousIsNarrow:!0,...u},t=T(t),t.length===0))return 0;t=t.replace(FD(),\"  \");const F=u.ambiguousIsNarrow?1:2;let e=0;for(const s of t){const i=s.codePointAt(0);if(i<=31||i>=127&&i<=159||i>=768&&i<=879)continue;switch(DD.eastAsianWidth(s)){case\"F\":case\"W\":e+=2;break;case\"A\":e+=F;break;default:e+=1}}return e}const m=10,L=(t=0)=>u=>`\\x1B[${u+t}m`,N=(t=0)=>u=>`\\x1B[${38+t};5;${u}m`,I=(t=0)=>(u,F,e)=>`\\x1B[${38+t};2;${u};${F};${e}m`,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};Object.keys(r.modifier);const tD=Object.keys(r.color),eD=Object.keys(r.bgColor);[...tD,...eD];function sD(){const t=new Map;for(const[u,F]of Object.entries(r)){for(const[e,s]of Object.entries(F))r[e]={open:`\\x1B[${s[0]}m`,close:`\\x1B[${s[1]}m`},F[e]=r[e],t.set(s[0],s[1]);Object.defineProperty(r,u,{value:F,enumerable:!1})}return Object.defineProperty(r,\"codes\",{value:t,enumerable:!1}),r.color.close=\"\\x1B[39m\",r.bgColor.close=\"\\x1B[49m\",r.color.ansi=L(),r.color.ansi256=N(),r.color.ansi16m=I(),r.bgColor.ansi=L(m),r.bgColor.ansi256=N(m),r.bgColor.ansi16m=I(m),Object.defineProperties(r,{rgbToAnsi256:{value:(u,F,e)=>u===F&&F===e?u<8?16:u>248?231:Math.round((u-8)/247*24)+232:16+36*Math.round(u/255*5)+6*Math.round(F/255*5)+Math.round(e/255*5),enumerable:!1},hexToRgb:{value:u=>{const F=/[a-f\\d]{6}|[a-f\\d]{3}/i.exec(u.toString(16));if(!F)return[0,0,0];let[e]=F;e.length===3&&(e=[...e].map(i=>i+i).join(\"\"));const s=Number.parseInt(e,16);return[s>>16&255,s>>8&255,s&255]},enumerable:!1},hexToAnsi256:{value:u=>r.rgbToAnsi256(...r.hexToRgb(u)),enumerable:!1},ansi256ToAnsi:{value:u=>{if(u<8)return 30+u;if(u<16)return 90+(u-8);let F,e,s;if(u>=232)F=((u-232)*10+8)/255,e=F,s=F;else{u-=16;const C=u%36;F=Math.floor(u/36)/5,e=Math.floor(C/6)/5,s=C%6/5}const i=Math.max(F,e,s)*2;if(i===0)return 30;let D=30+(Math.round(s)<<2|Math.round(e)<<1|Math.round(F));return i===2&&(D+=60),D},enumerable:!1},rgbToAnsi:{value:(u,F,e)=>r.ansi256ToAnsi(r.rgbToAnsi256(u,F,e)),enumerable:!1},hexToAnsi:{value:u=>r.ansi256ToAnsi(r.hexToAnsi256(u)),enumerable:!1}}),r}const iD=sD(),v=new Set([\"\\x1B\",\"\\x9B\"]),CD=39,w=\"\\x07\",W=\"[\",rD=\"]\",R=\"m\",y=`${rD}8;;`,V=t=>`${v.values().next().value}${W}${t}${R}`,z=t=>`${v.values().next().value}${y}${t}${w}`,ED=t=>t.split(\" \").map(u=>A(u)),_=(t,u,F)=>{const e=[...u];let s=!1,i=!1,D=A(T(t[t.length-1]));for(const[C,o]of e.entries()){const E=A(o);if(D+E<=F?t[t.length-1]+=o:(t.push(o),D=0),v.has(o)&&(s=!0,i=e.slice(C+1).join(\"\").startsWith(y)),s){i?o===w&&(s=!1,i=!1):o===R&&(s=!1);continue}D+=E,D===F&&C<e.length-1&&(t.push(\"\"),D=0)}!D&&t[t.length-1].length>0&&t.length>1&&(t[t.length-2]+=t.pop())},nD=t=>{const u=t.split(\" \");let F=u.length;for(;F>0&&!(A(u[F-1])>0);)F--;return F===u.length?t:u.slice(0,F).join(\" \")+u.slice(F).join(\"\")},oD=(t,u,F={})=>{if(F.trim!==!1&&t.trim()===\"\")return\"\";let e=\"\",s,i;const D=ED(t);let C=[\"\"];for(const[E,a]of t.split(\" \").entries()){F.trim!==!1&&(C[C.length-1]=C[C.length-1].trimStart());let n=A(C[C.length-1]);if(E!==0&&(n>=u&&(F.wordWrap===!1||F.trim===!1)&&(C.push(\"\"),n=0),(n>0||F.trim===!1)&&(C[C.length-1]+=\" \",n++)),F.hard&&D[E]>u){const B=u-n,p=1+Math.floor((D[E]-B-1)/u);Math.floor((D[E]-1)/u)<p&&C.push(\"\"),_(C,a,u);continue}if(n+D[E]>u&&n>0&&D[E]>0){if(F.wordWrap===!1&&n<u){_(C,a,u);continue}C.push(\"\")}if(n+D[E]>u&&F.wordWrap===!1){_(C,a,u);continue}C[C.length-1]+=a}F.trim!==!1&&(C=C.map(E=>nD(E)));const o=[...C.join(`\n`)];for(const[E,a]of o.entries()){if(e+=a,v.has(a)){const{groups:B}=new RegExp(`(?:\\\\${W}(?<code>\\\\d+)m|\\\\${y}(?<uri>.*)${w})`).exec(o.slice(E).join(\"\"))||{groups:{}};if(B.code!==void 0){const p=Number.parseFloat(B.code);s=p===CD?void 0:p}else B.uri!==void 0&&(i=B.uri.length===0?void 0:B.uri)}const n=iD.codes.get(Number(s));o[E+1]===`\n`?(i&&(e+=z(\"\")),s&&n&&(e+=V(n))):a===`\n`&&(s&&n&&(e+=V(s)),i&&(e+=z(i)))}return e};function G(t,u,F){return String(t).normalize().replace(/\\r\\n/g,`\n`).split(`\n`).map(e=>oD(e,u,F)).join(`\n`)}const aD=[\"up\",\"down\",\"left\",\"right\",\"space\",\"enter\",\"cancel\"],c={actions:new Set(aD),aliases:new Map([[\"k\",\"up\"],[\"j\",\"down\"],[\"h\",\"left\"],[\"l\",\"right\"],[\"\u0003\",\"cancel\"],[\"escape\",\"cancel\"]])};function hD(t){for(const u in t){const F=u;if(!Object.hasOwn(t,F))continue;const e=t[F];switch(F){case\"aliases\":{for(const s in e)Object.hasOwn(e,s)&&(c.aliases.has(s)||c.aliases.set(s,e[s]));break}}}}function k(t,u){if(typeof t==\"string\")return c.aliases.get(t)===u;for(const F of t)if(F!==void 0&&k(F,u))return!0;return!1}function lD(t,u){if(t===u)return;const F=t.split(`\n`),e=u.split(`\n`),s=[];for(let i=0;i<Math.max(F.length,e.length);i++)F[i]!==e[i]&&s.push(i);return s}const xD=globalThis.process.platform.startsWith(\"win\"),S=Symbol(\"clack:cancel\");function BD(t){return t===S}function d(t,u){const F=t;F.isTTY&&F.setRawMode(u)}function cD({input:t=$,output:u=j,overwrite:F=!0,hideCursor:e=!0}={}){const s=f.createInterface({input:t,output:u,prompt:\"\",tabSize:1});f.emitKeypressEvents(t,s),t.isTTY&&t.setRawMode(!0);const i=(D,{name:C,sequence:o})=>{const E=String(D);if(k([E,C,o],\"cancel\")){e&&u.write(l.show),process.exit(0);return}if(!F)return;const a=C===\"return\"?0:-1,n=C===\"return\"?-1:0;f.moveCursor(u,a,n,()=>{f.clearLine(u,1,()=>{t.once(\"keypress\",i)})})};return e&&u.write(l.hide),t.once(\"keypress\",i),()=>{t.off(\"keypress\",i),e&&u.write(l.show),t.isTTY&&!xD&&t.setRawMode(!1),s.terminal=!1,s.close()}}var AD=Object.defineProperty,pD=(t,u,F)=>u in t?AD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,h=(t,u,F)=>(pD(t,typeof u!=\"symbol\"?u+\"\":u,F),F);class x{constructor(u,F=!0){h(this,\"input\"),h(this,\"output\"),h(this,\"_abortSignal\"),h(this,\"rl\"),h(this,\"opts\"),h(this,\"_render\"),h(this,\"_track\",!1),h(this,\"_prevFrame\",\"\"),h(this,\"_subscribers\",new Map),h(this,\"_cursor\",0),h(this,\"state\",\"initial\"),h(this,\"error\",\"\"),h(this,\"value\");const{input:e=$,output:s=j,render:i,signal:D,...C}=u;this.opts=C,this.onKeypress=this.onKeypress.bind(this),this.close=this.close.bind(this),this.render=this.render.bind(this),this._render=i.bind(this),this._track=F,this._abortSignal=D,this.input=e,this.output=s}unsubscribe(){this._subscribers.clear()}setSubscriber(u,F){const e=this._subscribers.get(u)??[];e.push(F),this._subscribers.set(u,e)}on(u,F){this.setSubscriber(u,{cb:F})}once(u,F){this.setSubscriber(u,{cb:F,once:!0})}emit(u,...F){const e=this._subscribers.get(u)??[],s=[];for(const i of e)i.cb(...F),i.once&&s.push(()=>e.splice(e.indexOf(i),1));for(const i of s)i()}prompt(){return new Promise((u,F)=>{if(this._abortSignal){if(this._abortSignal.aborted)return this.state=\"cancel\",this.close(),u(S);this._abortSignal.addEventListener(\"abort\",()=>{this.state=\"cancel\",this.close()},{once:!0})}const e=new U(0);e._write=(s,i,D)=>{this._track&&(this.value=this.rl?.line.replace(/\\t/g,\"\"),this._cursor=this.rl?.cursor??0,this.emit(\"value\",this.value)),D()},this.input.pipe(e),this.rl=M.createInterface({input:this.input,output:e,tabSize:2,prompt:\"\",escapeCodeTimeout:50}),M.emitKeypressEvents(this.input,this.rl),this.rl.prompt(),this.opts.initialValue!==void 0&&this._track&&this.rl.write(this.opts.initialValue),this.input.on(\"keypress\",this.onKeypress),d(this.input,!0),this.output.on(\"resize\",this.render),this.render(),this.once(\"submit\",()=>{this.output.write(l.show),this.output.off(\"resize\",this.render),d(this.input,!1),u(this.value)}),this.once(\"cancel\",()=>{this.output.write(l.show),this.output.off(\"resize\",this.render),d(this.input,!1),u(S)})})}onKeypress(u,F){if(this.state===\"error\"&&(this.state=\"active\"),F?.name&&(!this._track&&c.aliases.has(F.name)&&this.emit(\"cursor\",c.aliases.get(F.name)),c.actions.has(F.name)&&this.emit(\"cursor\",F.name)),u&&(u.toLowerCase()===\"y\"||u.toLowerCase()===\"n\")&&this.emit(\"confirm\",u.toLowerCase()===\"y\"),u===\"\t\"&&this.opts.placeholder&&(this.value||(this.rl?.write(this.opts.placeholder),this.emit(\"value\",this.opts.placeholder))),u&&this.emit(\"key\",u.toLowerCase()),F?.name===\"return\"){if(this.opts.validate){const e=this.opts.validate(this.value);e&&(this.error=e instanceof Error?e.message:e,this.state=\"error\",this.rl?.write(this.value))}this.state!==\"error\"&&(this.state=\"submit\")}k([u,F?.name,F?.sequence],\"cancel\")&&(this.state=\"cancel\"),(this.state===\"submit\"||this.state===\"cancel\")&&this.emit(\"finalize\"),this.render(),(this.state===\"submit\"||this.state===\"cancel\")&&this.close()}close(){this.input.unpipe(),this.input.removeListener(\"keypress\",this.onKeypress),this.output.write(`\n`),d(this.input,!1),this.rl?.close(),this.rl=void 0,this.emit(`${this.state}`,this.value),this.unsubscribe()}restoreCursor(){const u=G(this._prevFrame,process.stdout.columns,{hard:!0}).split(`\n`).length-1;this.output.write(l.move(-999,u*-1))}render(){const u=G(this._render(this)??\"\",process.stdout.columns,{hard:!0});if(u!==this._prevFrame){if(this.state===\"initial\")this.output.write(l.hide);else{const F=lD(this._prevFrame,u);if(this.restoreCursor(),F&&F?.length===1){const e=F[0];this.output.write(l.move(0,e)),this.output.write(b.lines(1));const s=u.split(`\n`);this.output.write(s[e]),this._prevFrame=u,this.output.write(l.move(0,s.length-e-1));return}if(F&&F?.length>1){const e=F[0];this.output.write(l.move(0,e)),this.output.write(b.down());const s=u.split(`\n`).slice(e);this.output.write(s.join(`\n`)),this._prevFrame=u;return}this.output.write(b.down())}this.output.write(u),this.state===\"initial\"&&(this.state=\"active\"),this._prevFrame=u}}}class fD extends x{get cursor(){return this.value?0:1}get _value(){return this.cursor===0}constructor(u){super(u,!1),this.value=!!u.initialValue,this.on(\"value\",()=>{this.value=this._value}),this.on(\"confirm\",F=>{this.output.write(l.move(0,-1)),this.value=F,this.state=\"submit\",this.close()}),this.on(\"cursor\",()=>{this.value=!this.value})}}var gD=Object.defineProperty,vD=(t,u,F)=>u in t?gD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,K=(t,u,F)=>(vD(t,typeof u!=\"symbol\"?u+\"\":u,F),F);let dD=class extends x{constructor(u){super(u,!1),K(this,\"options\"),K(this,\"cursor\",0);const{options:F}=u;this.options=Object.entries(F).flatMap(([e,s])=>[{value:e,group:!0,label:e},...s.map(i=>({...i,group:e}))]),this.value=[...u.initialValues??[]],this.cursor=Math.max(this.options.findIndex(({value:e})=>e===u.cursorAt),0),this.on(\"cursor\",e=>{switch(e){case\"left\":case\"up\":this.cursor=this.cursor===0?this.options.length-1:this.cursor-1;break;case\"down\":case\"right\":this.cursor=this.cursor===this.options.length-1?0:this.cursor+1;break;case\"space\":this.toggleValue();break}})}getGroupItems(u){return this.options.filter(F=>F.group===u)}isGroupSelected(u){return this.getGroupItems(u).every(F=>this.value.includes(F.value))}toggleValue(){const u=this.options[this.cursor];if(u.group===!0){const F=u.value,e=this.getGroupItems(F);this.isGroupSelected(F)?this.value=this.value.filter(s=>e.findIndex(i=>i.value===s)===-1):this.value=[...this.value,...e.map(s=>s.value)],this.value=Array.from(new Set(this.value))}else{const F=this.value.includes(u.value);this.value=F?this.value.filter(e=>e!==u.value):[...this.value,u.value]}}};var bD=Object.defineProperty,mD=(t,u,F)=>u in t?bD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,Y=(t,u,F)=>(mD(t,typeof u!=\"symbol\"?u+\"\":u,F),F);let wD=class extends x{constructor(u){super(u,!1),Y(this,\"options\"),Y(this,\"cursor\",0),this.options=u.options,this.value=[...u.initialValues??[]],this.cursor=Math.max(this.options.findIndex(({value:F})=>F===u.cursorAt),0),this.on(\"key\",F=>{F===\"a\"&&this.toggleAll()}),this.on(\"cursor\",F=>{switch(F){case\"left\":case\"up\":this.cursor=this.cursor===0?this.options.length-1:this.cursor-1;break;case\"down\":case\"right\":this.cursor=this.cursor===this.options.length-1?0:this.cursor+1;break;case\"space\":this.toggleValue();break}})}get _value(){return this.options[this.cursor].value}toggleAll(){const u=this.value.length===this.options.length;this.value=u?[]:this.options.map(F=>F.value)}toggleValue(){const u=this.value.includes(this._value);this.value=u?this.value.filter(F=>F!==this._value):[...this.value,this._value]}};var yD=Object.defineProperty,_D=(t,u,F)=>u in t?yD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,Z=(t,u,F)=>(_D(t,typeof u!=\"symbol\"?u+\"\":u,F),F);class kD extends x{constructor({mask:u,...F}){super(F),Z(this,\"valueWithCursor\",\"\"),Z(this,\"_mask\",\"\\u2022\"),this._mask=u??\"\\u2022\",this.on(\"finalize\",()=>{this.valueWithCursor=this.masked}),this.on(\"value\",()=>{if(this.cursor>=this.value.length)this.valueWithCursor=`${this.masked}${g.inverse(g.hidden(\"_\"))}`;else{const e=this.masked.slice(0,this.cursor),s=this.masked.slice(this.cursor);this.valueWithCursor=`${e}${g.inverse(s[0])}${s.slice(1)}`}})}get cursor(){return this._cursor}get masked(){return this.value.replaceAll(/./g,this._mask)}}var SD=Object.defineProperty,$D=(t,u,F)=>u in t?SD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,q=(t,u,F)=>($D(t,typeof u!=\"symbol\"?u+\"\":u,F),F);class jD extends x{constructor(u){super(u,!1),q(this,\"options\"),q(this,\"cursor\",0),this.options=u.options,this.cursor=this.options.findIndex(({value:F})=>F===u.initialValue),this.cursor===-1&&(this.cursor=0),this.changeValue(),this.on(\"cursor\",F=>{switch(F){case\"left\":case\"up\":this.cursor=this.cursor===0?this.options.length-1:this.cursor-1;break;case\"down\":case\"right\":this.cursor=this.cursor===this.options.length-1?0:this.cursor+1;break}this.changeValue()})}get _value(){return this.options[this.cursor]}changeValue(){this.value=this._value.value}}var MD=Object.defineProperty,TD=(t,u,F)=>u in t?MD(t,u,{enumerable:!0,configurable:!0,writable:!0,value:F}):t[u]=F,H=(t,u,F)=>(TD(t,typeof u!=\"symbol\"?u+\"\":u,F),F);class OD extends x{constructor(u){super(u,!1),H(this,\"options\"),H(this,\"cursor\",0),this.options=u.options;const F=this.options.map(({value:[e]})=>e?.toLowerCase());this.cursor=Math.max(F.indexOf(u.initialValue),0),this.on(\"key\",e=>{if(!F.includes(e))return;const s=this.options.find(({value:[i]})=>i?.toLowerCase()===e);s&&(this.value=s.value,this.state=\"submit\",this.emit(\"submit\"))})}}class PD extends x{get valueWithCursor(){if(this.state===\"submit\")return this.value;if(this.cursor>=this.value.length)return`${this.value}\\u2588`;const u=this.value.slice(0,this.cursor),[F,...e]=this.value.slice(this.cursor);return`${u}${g.inverse(F)}${e.join(\"\")}`}get cursor(){return this._cursor}constructor(u){super(u),this.on(\"finalize\",()=>{this.value||(this.value=u.defaultValue)})}}export{fD as ConfirmPrompt,dD as GroupMultiSelectPrompt,wD as MultiSelectPrompt,kD as PasswordPrompt,x as Prompt,OD as SelectKeyPrompt,jD as SelectPrompt,PD as TextPrompt,cD as block,BD as isCancel,hD as updateSettings};\n//# sourceMappingURL=index.mjs.map\n","import{stripVTControlCharacters as S}from\"node:util\";import{TextPrompt as Q,PasswordPrompt as X,ConfirmPrompt as Z,SelectPrompt as ee,SelectKeyPrompt as te,MultiSelectPrompt as se,GroupMultiSelectPrompt as re,isCancel as ie,block as ne}from\"@clack/core\";export{isCancel,updateSettings}from\"@clack/core\";import g from\"node:process\";import e from\"picocolors\";import{cursor as oe,erase as ae}from\"sisteransi\";function ce(){return g.platform!==\"win32\"?g.env.TERM!==\"linux\":!!g.env.CI||!!g.env.WT_SESSION||!!g.env.TERMINUS_SUBLIME||g.env.ConEmuTask===\"{cmd::Cmder}\"||g.env.TERM_PROGRAM===\"Terminus-Sublime\"||g.env.TERM_PROGRAM===\"vscode\"||g.env.TERM===\"xterm-256color\"||g.env.TERM===\"alacritty\"||g.env.TERMINAL_EMULATOR===\"JetBrains-JediTerm\"}const V=ce(),u=(t,n)=>V?t:n,le=u(\"\\u25C6\",\"*\"),L=u(\"\\u25A0\",\"x\"),W=u(\"\\u25B2\",\"x\"),C=u(\"\\u25C7\",\"o\"),ue=u(\"\\u250C\",\"T\"),o=u(\"\\u2502\",\"|\"),d=u(\"\\u2514\",\"\\u2014\"),k=u(\"\\u25CF\",\">\"),P=u(\"\\u25CB\",\" \"),A=u(\"\\u25FB\",\"[\\u2022]\"),T=u(\"\\u25FC\",\"[+]\"),F=u(\"\\u25FB\",\"[ ]\"),$e=u(\"\\u25AA\",\"\\u2022\"),_=u(\"\\u2500\",\"-\"),me=u(\"\\u256E\",\"+\"),de=u(\"\\u251C\",\"+\"),pe=u(\"\\u256F\",\"+\"),q=u(\"\\u25CF\",\"\\u2022\"),D=u(\"\\u25C6\",\"*\"),U=u(\"\\u25B2\",\"!\"),K=u(\"\\u25A0\",\"x\"),w=t=>{switch(t){case\"initial\":case\"active\":return e.cyan(le);case\"cancel\":return e.red(L);case\"error\":return e.yellow(W);case\"submit\":return e.green(C)}},B=t=>{const{cursor:n,options:s,style:r}=t,i=t.maxItems??Number.POSITIVE_INFINITY,a=Math.max(process.stdout.rows-4,0),c=Math.min(a,Math.max(i,5));let l=0;n>=l+c-3?l=Math.max(Math.min(n-c+3,s.length-c),0):n<l+2&&(l=Math.max(n-2,0));const $=c<s.length&&l>0,p=c<s.length&&l+c<s.length;return s.slice(l,l+c).map((M,v,x)=>{const j=v===0&&$,E=v===x.length-1&&p;return j||E?e.dim(\"...\"):r(M,v+l===n)})},he=t=>new Q({validate:t.validate,placeholder:t.placeholder,defaultValue:t.defaultValue,initialValue:t.initialValue,render(){const n=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`,s=t.placeholder?e.inverse(t.placeholder[0])+e.dim(t.placeholder.slice(1)):e.inverse(e.hidden(\"_\")),r=this.value?this.valueWithCursor:s;switch(this.state){case\"error\":return`${n.trim()}\n${e.yellow(o)}  ${r}\n${e.yellow(d)}  ${e.yellow(this.error)}\n`;case\"submit\":return`${n}${e.gray(o)}  ${e.dim(this.value||t.placeholder)}`;case\"cancel\":return`${n}${e.gray(o)}  ${e.strikethrough(e.dim(this.value??\"\"))}${this.value?.trim()?`\n${e.gray(o)}`:\"\"}`;default:return`${n}${e.cyan(o)}  ${r}\n${e.cyan(d)}\n`}}}).prompt(),ge=t=>new X({validate:t.validate,mask:t.mask??$e,render(){const n=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`,s=this.valueWithCursor,r=this.masked;switch(this.state){case\"error\":return`${n.trim()}\n${e.yellow(o)}  ${r}\n${e.yellow(d)}  ${e.yellow(this.error)}\n`;case\"submit\":return`${n}${e.gray(o)}  ${e.dim(r)}`;case\"cancel\":return`${n}${e.gray(o)}  ${e.strikethrough(e.dim(r??\"\"))}${r?`\n${e.gray(o)}`:\"\"}`;default:return`${n}${e.cyan(o)}  ${s}\n${e.cyan(d)}\n`}}}).prompt(),ye=t=>{const n=t.active??\"Yes\",s=t.inactive??\"No\";return new Z({active:n,inactive:s,initialValue:t.initialValue??!0,render(){const r=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`,i=this.value?n:s;switch(this.state){case\"submit\":return`${r}${e.gray(o)}  ${e.dim(i)}`;case\"cancel\":return`${r}${e.gray(o)}  ${e.strikethrough(e.dim(i))}\n${e.gray(o)}`;default:return`${r}${e.cyan(o)}  ${this.value?`${e.green(k)} ${n}`:`${e.dim(P)} ${e.dim(n)}`} ${e.dim(\"/\")} ${this.value?`${e.dim(P)} ${e.dim(s)}`:`${e.green(k)} ${s}`}\n${e.cyan(d)}\n`}}}).prompt()},ve=t=>{const n=(s,r)=>{const i=s.label??String(s.value);switch(r){case\"selected\":return`${e.dim(i)}`;case\"active\":return`${e.green(k)} ${i} ${s.hint?e.dim(`(${s.hint})`):\"\"}`;case\"cancelled\":return`${e.strikethrough(e.dim(i))}`;default:return`${e.dim(P)} ${e.dim(i)}`}};return new ee({options:t.options,initialValue:t.initialValue,render(){const s=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`;switch(this.state){case\"submit\":return`${s}${e.gray(o)}  ${n(this.options[this.cursor],\"selected\")}`;case\"cancel\":return`${s}${e.gray(o)}  ${n(this.options[this.cursor],\"cancelled\")}\n${e.gray(o)}`;default:return`${s}${e.cyan(o)}  ${B({cursor:this.cursor,options:this.options,maxItems:t.maxItems,style:(r,i)=>n(r,i?\"active\":\"inactive\")}).join(`\n${e.cyan(o)}  `)}\n${e.cyan(d)}\n`}}}).prompt()},we=t=>{const n=(s,r=\"inactive\")=>{const i=s.label??String(s.value);return r===\"selected\"?`${e.dim(i)}`:r===\"cancelled\"?`${e.strikethrough(e.dim(i))}`:r===\"active\"?`${e.bgCyan(e.gray(` ${s.value} `))} ${i} ${s.hint?e.dim(`(${s.hint})`):\"\"}`:`${e.gray(e.bgWhite(e.inverse(` ${s.value} `)))} ${i} ${s.hint?e.dim(`(${s.hint})`):\"\"}`};return new te({options:t.options,initialValue:t.initialValue,render(){const s=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`;switch(this.state){case\"submit\":return`${s}${e.gray(o)}  ${n(this.options.find(r=>r.value===this.value)??t.options[0],\"selected\")}`;case\"cancel\":return`${s}${e.gray(o)}  ${n(this.options[0],\"cancelled\")}\n${e.gray(o)}`;default:return`${s}${e.cyan(o)}  ${this.options.map((r,i)=>n(r,i===this.cursor?\"active\":\"inactive\")).join(`\n${e.cyan(o)}  `)}\n${e.cyan(d)}\n`}}}).prompt()},fe=t=>{const n=(s,r)=>{const i=s.label??String(s.value);return r===\"active\"?`${e.cyan(A)} ${i} ${s.hint?e.dim(`(${s.hint})`):\"\"}`:r===\"selected\"?`${e.green(T)} ${e.dim(i)}`:r===\"cancelled\"?`${e.strikethrough(e.dim(i))}`:r===\"active-selected\"?`${e.green(T)} ${i} ${s.hint?e.dim(`(${s.hint})`):\"\"}`:r===\"submitted\"?`${e.dim(i)}`:`${e.dim(F)} ${e.dim(i)}`};return new se({options:t.options,initialValues:t.initialValues,required:t.required??!0,cursorAt:t.cursorAt,validate(s){if(this.required&&s.length===0)return`Please select at least one option.\n${e.reset(e.dim(`Press ${e.gray(e.bgWhite(e.inverse(\" space \")))} to select, ${e.gray(e.bgWhite(e.inverse(\" enter \")))} to submit`))}`},render(){const s=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`,r=(i,a)=>{const c=this.value.includes(i.value);return a&&c?n(i,\"active-selected\"):c?n(i,\"selected\"):n(i,a?\"active\":\"inactive\")};switch(this.state){case\"submit\":return`${s}${e.gray(o)}  ${this.options.filter(({value:i})=>this.value.includes(i)).map(i=>n(i,\"submitted\")).join(e.dim(\", \"))||e.dim(\"none\")}`;case\"cancel\":{const i=this.options.filter(({value:a})=>this.value.includes(a)).map(a=>n(a,\"cancelled\")).join(e.dim(\", \"));return`${s}${e.gray(o)}  ${i.trim()?`${i}\n${e.gray(o)}`:\"\"}`}case\"error\":{const i=this.error.split(`\n`).map((a,c)=>c===0?`${e.yellow(d)}  ${e.yellow(a)}`:`   ${a}`).join(`\n`);return`${s+e.yellow(o)}  ${B({options:this.options,cursor:this.cursor,maxItems:t.maxItems,style:r}).join(`\n${e.yellow(o)}  `)}\n${i}\n`}default:return`${s}${e.cyan(o)}  ${B({options:this.options,cursor:this.cursor,maxItems:t.maxItems,style:r}).join(`\n${e.cyan(o)}  `)}\n${e.cyan(d)}\n`}}}).prompt()},be=t=>{const n=(s,r,i=[])=>{const a=s.label??String(s.value),c=typeof s.group==\"string\",l=c&&(i[i.indexOf(s)+1]??{group:!0}),$=c&&l.group===!0,p=c?`${$?d:o} `:\"\";return r===\"active\"?`${e.dim(p)}${e.cyan(A)} ${a} ${s.hint?e.dim(`(${s.hint})`):\"\"}`:r===\"group-active\"?`${p}${e.cyan(A)} ${e.dim(a)}`:r===\"group-active-selected\"?`${p}${e.green(T)} ${e.dim(a)}`:r===\"selected\"?`${e.dim(p)}${e.green(T)} ${e.dim(a)}`:r===\"cancelled\"?`${e.strikethrough(e.dim(a))}`:r===\"active-selected\"?`${e.dim(p)}${e.green(T)} ${a} ${s.hint?e.dim(`(${s.hint})`):\"\"}`:r===\"submitted\"?`${e.dim(a)}`:`${e.dim(p)}${e.dim(F)} ${e.dim(a)}`};return new re({options:t.options,initialValues:t.initialValues,required:t.required??!0,cursorAt:t.cursorAt,validate(s){if(this.required&&s.length===0)return`Please select at least one option.\n${e.reset(e.dim(`Press ${e.gray(e.bgWhite(e.inverse(\" space \")))} to select, ${e.gray(e.bgWhite(e.inverse(\" enter \")))} to submit`))}`},render(){const s=`${e.gray(o)}\n${w(this.state)}  ${t.message}\n`;switch(this.state){case\"submit\":return`${s}${e.gray(o)}  ${this.options.filter(({value:r})=>this.value.includes(r)).map(r=>n(r,\"submitted\")).join(e.dim(\", \"))}`;case\"cancel\":{const r=this.options.filter(({value:i})=>this.value.includes(i)).map(i=>n(i,\"cancelled\")).join(e.dim(\", \"));return`${s}${e.gray(o)}  ${r.trim()?`${r}\n${e.gray(o)}`:\"\"}`}case\"error\":{const r=this.error.split(`\n`).map((i,a)=>a===0?`${e.yellow(d)}  ${e.yellow(i)}`:`   ${i}`).join(`\n`);return`${s}${e.yellow(o)}  ${this.options.map((i,a,c)=>{const l=this.value.includes(i.value)||i.group===!0&&this.isGroupSelected(`${i.value}`),$=a===this.cursor;return!$&&typeof i.group==\"string\"&&this.options[this.cursor].value===i.group?n(i,l?\"group-active-selected\":\"group-active\",c):$&&l?n(i,\"active-selected\",c):l?n(i,\"selected\",c):n(i,$?\"active\":\"inactive\",c)}).join(`\n${e.yellow(o)}  `)}\n${r}\n`}default:return`${s}${e.cyan(o)}  ${this.options.map((r,i,a)=>{const c=this.value.includes(r.value)||r.group===!0&&this.isGroupSelected(`${r.value}`),l=i===this.cursor;return!l&&typeof r.group==\"string\"&&this.options[this.cursor].value===r.group?n(r,c?\"group-active-selected\":\"group-active\",a):l&&c?n(r,\"active-selected\",a):c?n(r,\"selected\",a):n(r,l?\"active\":\"inactive\",a)}).join(`\n${e.cyan(o)}  `)}\n${e.cyan(d)}\n`}}}).prompt()},Me=(t=\"\",n=\"\")=>{const s=`\n${t}\n`.split(`\n`),r=S(n).length,i=Math.max(s.reduce((c,l)=>{const $=S(l);return $.length>c?$.length:c},0),r)+2,a=s.map(c=>`${e.gray(o)}  ${e.dim(c)}${\" \".repeat(i-S(c).length)}${e.gray(o)}`).join(`\n`);process.stdout.write(`${e.gray(o)}\n${e.green(C)}  ${e.reset(n)} ${e.gray(_.repeat(Math.max(i-r-1,1))+me)}\n${a}\n${e.gray(de+_.repeat(i+2)+pe)}\n`)},xe=(t=\"\")=>{process.stdout.write(`${e.gray(d)}  ${e.red(t)}\n\n`)},Ie=(t=\"\")=>{process.stdout.write(`${e.gray(ue)}  ${t}\n`)},Se=(t=\"\")=>{process.stdout.write(`${e.gray(o)}\n${e.gray(d)}  ${t}\n\n`)},f={message:(t=\"\",{symbol:n=e.gray(o)}={})=>{const s=[`${e.gray(o)}`];if(t){const[r,...i]=t.split(`\n`);s.push(`${n}  ${r}`,...i.map(a=>`${e.gray(o)}  ${a}`))}process.stdout.write(`${s.join(`\n`)}\n`)},info:t=>{f.message(t,{symbol:e.blue(q)})},success:t=>{f.message(t,{symbol:e.green(D)})},step:t=>{f.message(t,{symbol:e.green(C)})},warn:t=>{f.message(t,{symbol:e.yellow(U)})},warning:t=>{f.warn(t)},error:t=>{f.message(t,{symbol:e.red(K)})}},J=`${e.gray(o)}  `,b={message:async(t,{symbol:n=e.gray(o)}={})=>{process.stdout.write(`${e.gray(o)}\n${n}  `);let s=3;for await(let r of t){r=r.replace(/\\n/g,`\n${J}`),r.includes(`\n`)&&(s=3+S(r.slice(r.lastIndexOf(`\n`))).length);const i=S(r).length;s+i<process.stdout.columns?(s+=i,process.stdout.write(r)):(process.stdout.write(`\n${J}${r.trimStart()}`),s=3+S(r.trimStart()).length)}process.stdout.write(`\n`)},info:t=>b.message(t,{symbol:e.blue(q)}),success:t=>b.message(t,{symbol:e.green(D)}),step:t=>b.message(t,{symbol:e.green(C)}),warn:t=>b.message(t,{symbol:e.yellow(U)}),warning:t=>b.warn(t),error:t=>b.message(t,{symbol:e.red(K)})},Y=({indicator:t=\"dots\"}={})=>{const n=V?[\"\\u25D2\",\"\\u25D0\",\"\\u25D3\",\"\\u25D1\"]:[\"\\u2022\",\"o\",\"O\",\"0\"],s=V?80:120,r=process.env.CI===\"true\";let i,a,c=!1,l=\"\",$,p=performance.now();const M=m=>{const h=m>1?\"Something went wrong\":\"Canceled\";c&&N(h,m)},v=()=>M(2),x=()=>M(1),j=()=>{process.on(\"uncaughtExceptionMonitor\",v),process.on(\"unhandledRejection\",v),process.on(\"SIGINT\",x),process.on(\"SIGTERM\",x),process.on(\"exit\",M)},E=()=>{process.removeListener(\"uncaughtExceptionMonitor\",v),process.removeListener(\"unhandledRejection\",v),process.removeListener(\"SIGINT\",x),process.removeListener(\"SIGTERM\",x),process.removeListener(\"exit\",M)},O=()=>{if($===void 0)return;r&&process.stdout.write(`\n`);const m=$.split(`\n`);process.stdout.write(oe.move(-999,m.length-1)),process.stdout.write(ae.down(m.length))},R=m=>m.replace(/\\.+$/,\"\"),G=m=>{const h=(performance.now()-m)/1e3,y=Math.floor(h/60),I=Math.floor(h%60);return y>0?`[${y}m ${I}s]`:`[${I}s]`},H=(m=\"\")=>{c=!0,i=ne(),l=R(m),p=performance.now(),process.stdout.write(`${e.gray(o)}\n`);let h=0,y=0;j(),a=setInterval(()=>{if(r&&l===$)return;O(),$=l;const I=e.magenta(n[h]);if(r)process.stdout.write(`${I}  ${l}...`);else if(t===\"timer\")process.stdout.write(`${I}  ${l} ${G(p)}`);else{const z=\".\".repeat(Math.floor(y)).slice(0,3);process.stdout.write(`${I}  ${l}${z}`)}h=h+1<n.length?h+1:0,y=y<n.length?y+.125:0},s)},N=(m=\"\",h=0)=>{c=!1,clearInterval(a),O();const y=h===0?e.green(C):h===1?e.red(L):e.red(W);l=R(m??l),t===\"timer\"?process.stdout.write(`${y}  ${l} ${G(p)}\n`):process.stdout.write(`${y}  ${l}\n`),E(),i()};return{start:H,stop:N,message:(m=\"\")=>{l=R(m??l)}}},Ce=async(t,n)=>{const s={},r=Object.keys(t);for(const i of r){const a=t[i],c=await a({results:s})?.catch(l=>{throw l});if(typeof n?.onCancel==\"function\"&&ie(c)){s[i]=\"canceled\",n.onCancel({results:s});continue}s[i]=c}return s},Te=async t=>{for(const n of t){if(n.enabled===!1)continue;const s=Y();s.start(n.title);const r=await n.task(s.message);s.stop(r||n.title)}};export{xe as cancel,ye as confirm,Ce as group,be as groupMultiselect,Ie as intro,f as log,fe as multiselect,Me as note,Se as outro,ge as password,ve as select,we as selectKey,Y as spinner,b as stream,Te as tasks,he as text};\n//# sourceMappingURL=index.mjs.map\n","import { text, intro, cancel, log, isCancel, select, spinner } from \"@clack/prompts\";\nimport type { InstallCommandOptions } from \"./options.js\";\nimport color from 'picocolors';\n\nexport const interact = async (partial: Partial<InstallCommandOptions>): InstallCommandOptions => {\n    // Opening Line\n    intro(color.inverse(\"nsm cli : installer\"));\n    \n    // Install Location\n    let location = process.cwd();\n    if (partial.location) {\n        log.message(`Using supplied directory: ${partial.location}`, { symbol: color.cyan('~') });\n        location = partial.location;\n    } else {\n        const next = await text({\n            message: \"Install Directory\",\n            placeholder: \"Leave empty to choose current directory\",\n            defaultValue: process.cwd(),\n        });\n        if (isCancel(next)) { cancel(\"adios!\"); process.exit(0); }\n        if (next) location = next;\n    }\n\n    // Install Type\n    let install = \"manual\";\n    if (partial.install) {\n        install = partial.install;\n    } else {\n        const next = await select({\n            message: \"Install System Service?\",\n            options: [\n                { value: \"manual\", label: \"Manual Install\" },\n                { value: \"windows\", label: \"Windows Service Install\" },\n                { value: \"linux\", label: \"Systemd Service Install\" },\n                { value: \"linux-print\", label: \"Systemd Service - Print Configuration\"}\n            ]\n        });\n        if (isCancel(next)) { cancel(\"adios!\"); process.exit(0); }\n        if (next) install = next;\n    }\n\n    // Executable Required\n    let node = process.execPath;\n    if (install !== \"manual\") {\n        const next = await text({\n            message: \"Path to node executable:\",\n            defaultValue: process.execPath,\n            placeholder: \"Enter to use current executable\",\n        });\n        if (isCancel(next)) { cancel(\"adios!\"); process.exit(0); }\n        if (next) node = next;\n    }\n    \n    console.log({ location, install, node })\n\n\n}","import { Command } from \"commander\";\nimport { interact } from \"./interactive.js\";\n\nexport const install = new Command(\"install\")\n    .description(\"Downloads and installs NSM\")\n    .option(\"-q\", \"--quiet\", \"No console output. Errors if arguments are missing.\")\n    .action((str, options) => {\n        if (!options.quiet) {\n            interact(options).then((prm) => {\n\n            }).catch(err => {\n                console.error(err);\n            })\n        }\n    });","import { program } from \"commander\";\nimport { install } from \"./commands/install/index.js\";\n\nprogram.name(__PKG_NAME__).version(__PKG_VERSION__);\nprogram.addCommand(install);\nprogram.parse();"],"names":["CommanderError","exitCode","code","message","InvalidArgumentError","error","require$$0","Argument","name","description","value","previous","fn","values","arg","humanReadableArgName","nameOutput","argument","Help","contextOptions","cmd","visibleCommands","helpCommand","a","b","getSortKey","option","visibleOptions","helpOption","removeShort","removeLong","globalOptions","ancestorCmd","args","helper","max","command","cmdName","ancestorCmdNames","extraInfo","choice","extraDescription","termWidth","helpWidth","callFormatItem","term","output","commandDescription","argumentList","optionList","globalOptionList","commandList","str","stripColor","word","itemIndentStr","paddedTerm","spacerWidth","remainingWidth","formattedDescription","width","rawLines","chunkPattern","wrappedLines","line","chunks","sumChunks","sumWidth","chunk","visibleWidth","nextChunk","sgrPattern","help","Option","flags","optionFlags","splitOptionFlags","names","impliedOptionValues","newImplied","mandatory","hide","camelcase","DualOptions","options","key","optionKey","preset","negativeValue","shortFlag","longFlag","shortFlagExp","longFlagExp","flagParts","unsupportedFlag","baseError","maxDistance","editDistance","d","i","j","cost","suggestSimilar","candidates","searchingOptions","candidate","similar","bestDistance","minSimilarity","distance","length","suggestSimilar_1","EventEmitter","childProcess","require$$1","path","require$$2","fs","require$$3","process","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","Command","write","useColor","sourceCommand","result","nameAndArgs","actionOptsOrExecDesc","execOpts","desc","opts","configuration","displayHelp","displaySuggestion","defaultValue","detail","previousArgument","enableOrNameAndArgs","helpName","helpArgs","helpDescription","deprecatedDescription","event","listener","allowedValues","err","expectedArgsCount","actionArgs","target","invalidArgumentMessage","matchingOption","matchingFlag","knownBy","alreadyUsed","existingCmd","newCmd","oname","positiveLongFlag","handleOptionValue","val","invalidValueMessage","valueSource","oldValue","config","regex","def","m","parseArg","combine","allowUnknown","allowExcess","positional","passThrough","storeAsProperties","source","argv","parseOptions","execArgv","userArgs","executableFile","executableDir","subcommandName","executableDirMessage","executableMissing","subcommand","launchWithNode","sourceExt","findFile","baseDir","baseName","localBin","foundExt","ext","resolvedScriptPath","localFile","legacyName","proc","incrementNodeInspectorPort","signal","exitCallback","wrappedError","commandName","operands","unknown","subCommand","promiseChain","myParseArg","parsedValue","processedArgs","declaredArg","index","processed","v","promise","hooks","hookedCommand","callback","hookDetail","hook","parsed","checkForUnknownOptions","commandEvent","anOption","definedNonDefaultOptions","conflictingAndDefined","defined","dest","maybeOption","activeVariadicOption","len","combinedOptions","errorOptions","dualHelper","hasCustomOptionValue","impliedKey","conflictingOption","findBestOptionFromValue","optionValue","negativeOption","positiveOption","getErrorMessage","bestOption","flag","suggestion","candidateFlags","moreFlags","receivedArgs","expected","s","unknownName","candidateNames","versionOption","argsDescription","alias","matchingCommand","aliases","filename","context","text","baseWrite","hasColors","deprecatedCallback","outputContext","eventContext","helpInformation","position","helpEvent","helpStr","debugOption","debugHost","debugPort","match","commander","program","createCommand","createArgument","createOption","InvalidOptionArgumentError","ESC","CSI","beep","cursor","x","y","ret","count","scroll","erase","clear","src","create","picocolors_browserModule","J","t","F","Q","T","O","P","u","e","D","C","o","E","n","X","DD","uD","FD","A","L","N","I","r","tD","eD","sD","iD","CD","w","W","rD","R","V","z","ED","_","nD","oD","p","G","aD","c","k","lD","S","BD","AD","pD","h","$","U","M","l","SD","$D","q","jD","PD","g","ce","le","ue","K","B","he","ve","ee","xe","Ie","f","interact","partial","intro","color","location","log","next","isCancel","cancel","install","select","node","prm"],"mappings":"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AG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,OAAKA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAK,OAAKA,KAAGA,KAAG,OAAKA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,QAAM,QAAMA,KAAGA,KAAG,QAAMA,KAAG,SAAOA,KAAG,SAAO,SAAOA,KAAGA,KAAG,SAAO,SAAOA,KAAGA,KAAG,SAAO,SAAOA,KAAGA,KAAG,SAAO,SAAOA,KAAGA,KAAG,SAAO,SAAOA,KAAGA,KAAG,SAAOA,KAAG,SAAO,UAAQA,KAAGA,KAAG,UAAQ,UAAQA,KAAGA,KAAG,UAAQ,UAAQA,KAAGA,KAAG,UAAQ,UAAQA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}