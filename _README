 -- INSTALLING NSM -- 

1. Create a main directory for node-server-manager (from now referred to as root or /)
2. Create subdirectories:
    - node
    - git
    - app
    - store
3. Save this application in /app
4. Copy a portable version of git to /git
5. Copy a portable version of node to /node
6. Run /app/install-packages.cmd (this should install all required packages for app to run)
7. Run /app/install-service.cmd as administrator - it will still run without, but will ask for permissions about six seperate times

 -- USER SETUP -- 

1. Login with the default username:password of admin:administrator
2. Click on the user icon in the bottom left
3. Use the prompts to create new users and assign them admin permissions
4. Sign out and sign in again with a different admin account
5. Remove the default admin account

 -- PERMISSION LEVELS -- 

These are ordered by elevation, where permissions higher in the list also have permissions from those lower in the list 
In addition, any methods that require authentication in this guide are marked before their numbered steps.
ADMIN - Admin Permissions allow the user to create users, edit users, and delete users, as well as reset passwords to default values.
CONFIGURE - Configure Permissions allow the user to create new servers, edit existing servers, and run "script" jobs such as installing packages and git pull/clone.
MANAGE - Manage Permissions allow the user to start and stop all servers.
UNAUTHENTICATED - Unauthenticated users can view servers, their ports, whether they are running, server logs, and NSM logs.

 -- CREATING USERS --

Note: this requires being signed in with "Admin" permissions
1. Click the users icon in the bottom left
2. Choose the "Manage Users" option
3. Choose New User at the top
4. Give them a username. Usernames must be unique, start with a lowercase letter, and contain only lowercase letters, numbers, or - (hyphen) characters.
5. Select the permission level that the user will have
6. Choose create
7. The user account will be created with the default password "password". Instruct the user to login and change their password - reminder that the password is transmitted pre-hashed so it is private (mostly), but not transmitted over SSL, so a unique password should be used.

 -- EDITING USERS -- 

Note: this requires being signed in with "Admin" permissions
1. Click the users icon in the bottom left
2. Choose the "Manage Users" option

 - TO CHANGE THE PERMISSIONS LEVEL OF A USER
    3. Click the "Change" button for the user
    4. Choose their new permission level.
    5. Click "Confirm" to save the data, or cancel to return. (NOTE: At least one admin account must exist at all times)

 - TO RESET THE PASSWORD FOR A USER
    3. Click the reset password button for the user.
    4. Click confirm
    5. The user will be logged out. Instruct them to sign back in again using the default password "password", and then change it to something secure.

 - TO DELETE THE USER
    3. Click the delete button for the user
    4. Click confirm
    5. The user will be deleted and therefore logged out. (NOTE: At least one admin account must exist at all times)

 -- ADDING SERVERS -- 

Note: this requires being signed in with "Configure" permissions
1. Select the add button at the top of the main page
2. Enter an id (this must be unique), a port number for the production server, and the entry point file (such as app.js)
3. Specify a git repository to pull from. This must not require authentication
4. Choose whether this server is "always on" (or will run on boot) - this setting only affects the production instance
5. Choose create

 -- CONFIGURING SERVERS --

Note: this requires being signed in with "Configure" permissions
1. Select the edit button for the corresponding server
2. Adjust the settings
3. Click save
4. If either of the test or production environments are running, you should restart them for changes (such as port number) to take effect

 -- START / STOP / RESTART SERVERS --

Note: this requires being signed in with "Manage" permissions
1. Select either the test or production environments for the server

 - IF THE SERVER IS RUNNING
   2. The Stop and Restart buttons will be displayed in the top right. Choose whichever option is applicable

 - IF THE SERVER IS STOPPED
   2. The Start button will be displayed. Click it to start the server.

 -- MIGRATING / UPDATING SERVERS --

Note: this requires being signed in with "Configure" permissions
1. Select either the test or production environments for the server
2. If the environment is running, stop it in order to view the list of commands

 - LOADING SOURCE CODE (FIRST TIME)
   3. Choose `git clone` to pull the source code down from the configured repository
   4. Choose `npm ci --production --no-optional` to install packages and dependencies

 - UPDATING SOURCE CODE (SUBSEQUENT TIMES)
   3. Choose `git pull` to pull changes down from the repository. Note: after cloning, changing the repository on the web console does not update the repository remote
   4. If packages have changed, run `npm ci --production --no-optional` to reinstall packages and dependencies

 -- UNINSTALLING NSM --

1. Visit the management console and stop all servers
2. Run /app/uninstall-service.cmd as administrator - it will stop and uninstall the service.
3. Nuke all the files (or don't, up to you)